name: Lichess Bot

on:
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

env:
  LICHESS_TOKEN: ${{ secrets.LICHESS_TOKEN }}

jobs:
  deploy-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    
    # Removed matrix strategy to run single instance
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      
    - name: Checkout Omega (private)
      uses: actions/checkout@v5
      with:
        repository: FayE75/Omega
        token: ${{ secrets.OMEGA_PAT }}
        path: Omega
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install tenacity  # Adding missing dependency
        
    - name: Download latest Stockfish dev
      run: |
        set -euo pipefail
        mkdir -p engines
        sudo apt-get update
        sudo apt-get install -y build-essential git
        echo "Listing repo root:"
        ls -la || true
        echo "Listing Omega directory:"
        ls -la Omega || true
        if [ ! -d Omega/src ]; then
          echo "ERROR: Omega/src not found — checkout may have failed."
          ls -lah Omega || true
          exit 1
        fi
        cd Omega/src
        echo "Trying to build (cwd=$(pwd))..."
        if make -n profile-build >/dev/null 2>&1; then
          make -j$(nproc) clean || true
          make -j$(nproc) profile-build
        else
          make -j$(nproc) clean || true
          make -j$(nproc)
        fi
        make strip || true
        cd ../..
        echo "Searching for built stockfish binaries..."
        found=$(find Omega/src -maxdepth 3 -type f -executable -iname 'stockfish*' -print -quit || true)
        if [ -z "$found" ]; then
          echo "ERROR: No stockfish binary found under Omega/src."
          echo "Listing Omega/src:"
          ls -la Omega/src || true
          exit 1
        fi
        echo "Found stockfish binary: $found"
        cp "$found" engines/stockfish
        mv -f engines/stockfish engines/sf || true
        chmod +x engines/sf || true
        echo "Copied binary to engines/sf"
        
    - name: Setup engines permissions
      run: |
        echo "🔧 Setting engine permissions..."
        chmod +x engines/fairy-stockfish_x86-64-bmi2
        chmod +x engines/ShashChess39
        
        # Verify engines
        echo "📋 Listing engines:"
        ls -la engines/

    - name: Setup token
      run: |
        python3 << 'EOF'
        import yaml
        try:
            with open('config.yml', 'r') as f:
                config = yaml.safe_load(f) or {}
            config['token'] = "${{ secrets.LICHESS_TOKEN }}"
            with open('config.yml', 'w') as f:
                yaml.dump(config, f, default_flow_style=False)
            print("✅ Token configuration successful")
        except Exception as e:
            print(f"❌ Error: {e}")
            exit(1)
        EOF
        
    - name: Launch bot
      timeout-minutes: 340
      run: |
        echo "🤖 Starting bot..."
        python3 user_interface.py matchmaking
